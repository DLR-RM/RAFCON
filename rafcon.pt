#
# RAFCON -- RMC awesome flow control
#

PTVERSION           = 2
NAME                = rafcon 
MAINTAINER          = Sebastian Brunner <sebastian.brunner@dlr.de>,
                      Rico Belder <rico.belder@dlr.de>,
                      Franz Steinmetz <franz.steinmetz@dlr.de>
DESCRIPTION         = Develop your robotic tasks using an intuitive graphical user interface

  RAFCON (RMC awesome [or advanced] flow control tool) uses hierarchical state machines, featuring
  concurrent state execution, to represent robot programs. It ships with a graphical user interface supporting the
  creation of state machines and contains IDE like debugging mechanisms. Alternatively, state machines can
  programmatically be generated using RAFCON's API.

DOCUMENTATION       = https://wiki.robotic.dlr.de/wiki/RAFCON
MANTIS_PROJECT      = DLR Flow-Control
SUPPORTED_LANGUAGES = python

DEPENDS             =
DEPENDS.osl*        = python-gtkmvc3==1.0,
                      python-gaphas==1.0,
                      python-jsonconversion==0.2,
                      python_yaml_configuration==0.2,
                      sw.common.pango==1.40

ARCHS               = osl42-x86_64
PYTHON_PATHS        = ${PKGROOT}/source
ADDITIONAL_ENV.osl* = RAFCON_LIB_PATH=${PKGROOT}/source/rafcon/share/rafcon/libraries,
                      RAFCON_CHECK_INSTALLATION=True,
                      PATH=${PKGROOT}/bin:$${PATH}

[pre-install]
python -m compileall -fq ./source/rafcon
python -m compileall -fq ./source/libraries

[install]
source/rafcon => source/rafcon
tests => tests
share | !*.pyc | !.gitignore => share
doc => doc
./VERSION => ./VERSION
bin/ | !rafcon_core | !rafcon| !resave_state_machines | !execution_log_viewer.py | !rafcon_execution_log_viewer | !*.pyc => bin # Symlinks are recreated in post_install step

[post-install]
cd ${RMPM_INSTALL_DIR}/bin && ln -s ../source/rafcon/core/start.py rafcon_core && ln -s ../source/rafcon/gui/start.py rafcon && ln -s ../source/rafcon/gui/resave_state_machines.py resave_state_machines && ln -s ../source/rafcon/gui/execution_log_viewer.py execution_log_viewer.py && ln -s ../source/rafcon/gui/execution_log_viewer.py rafcon_execution_log_viewer
