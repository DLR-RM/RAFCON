include:
  - project: 'dev/sys/sopl/ar-dev'
    # release branch
    ref: 'release/3.x'
    file:
      - '/ci/templates/default.yml'
      - '/ci/templates/python/default.yml'

variables:
  AR_CI_CLANG_FORMAT_DISABLE: "true"
  AR_CI_CLANG_TIDY_DISABLE: "true"
  AR_CI_CPPCHECK_DISABLE: "true"
  AR_CI_FLAKE8_DISABLE: "true"
  AR_CI_YAPF_DISABLE: "true"
  AR_CI_DOCS_DISABLE: "false"
  AR_CI_DEPLOY_CONAN_DISABLE: "true"

# From https://docs.gitlab.com/ee/ci/merge_request_pipelines/#excluding-certain-jobs
.only-default: &only-default
  only:
    # only: [branches, tags] is the default
    # extend it by merge_reguests
    # and limit branches to master and release/*
    # See also: https://docs.gitlab.com/ee/ci/yaml/#onlyexcept-basic
    - master
    - develop
    - /^release/.*$
    - /^release.*$
    - tags
    - merge_requests

docs_test:
  extends: .docs_test
  variables:
    BUILD_DIR: build
    CONAN_OPTIONS: ""
    MAKE_CMD_DOCS: "make docs"

pages:
  extends: .docs_pages
  variables:
    BUILD_DIR: build
    CONAN_OPTIONS: ""
    MAKE_CMD_DOCS: "make docs"
  only:
    - master
    - develop
    - tags
  except:
    variables:
      - $AR_CI_DOCS_DISABLE == "true"

test py3-tests: &test-py3-tests
  <<: *only-default
  stage: Test
  tags:
    - Agile_GUI_Docker
  script:
    - pip3 install tox
    - xvfb-run -as "-screen 0 1920x1200x24" tox -r -c tox_external.ini -e py36
  coverage: /^TOTAL.+?(\d+\%)$/
  artifacts:
    expire_in: 7 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml

test py3-tests-core:
  <<: *only-default
  stage: Test
  tags:
    - Agile_GUI_Docker
  script:
    - pip3 install tox
    - xvfb-run -as "-screen 0 1920x1200x24" tox -r -c tox_external.ini -e core
  coverage: /^TOTAL.+?(\d+\%)$/
  artifacts:
    expire_in: 7 days
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml

test py3-memory-test-core:
  <<: *only-default
  stage: Test
  tags:
    - Agile_GUI_Docker
  script:
    - pip3 install tox
    - xvfb-run -as "-screen 0 1920x1200x24" tox -r -c tox_external.ini -e memory_core
  artifacts:
    expire_in: 7 days


# running pytest directly does not work
# as the test_start_script.py test_start_script_valid_config always uses "python" to start "rafcon_core"
# which fails if tests are run using python3 as the "python" always maps to python2 on Ubuntu 18.04
#    - xvfb-run -as "-screen 0 1920x1200x24" python3 setup.py pytest --addopts '-vx -m "(core or guqi) and not unstable and not user_input"'

Test Python Upcoming:
  <<: *test-py3-tests
  image: artifactory.ar.int:5000/ar-ci-ubuntu:22.04
  script:
    - pip3 install tox
    - xvfb-run -as "-screen 0 1920x1200x24" tox -r -c tox_external.ini -e py310

Pip::build pure:
  variables:
    AR_PYTHON_PACKAGE_WHEEL_DIR: "${CI_PROJECT_DIR}/wheels"
  before_script:
    - python3 -m pip install -U pip
    - export AR_PYTHON_PACKAGE_ROOT_DIR="${CI_PROJECT_DIR}/${AR_PYTHON_PACKAGE_ROOT_DIR_SUFFIX}"
  parallel:
    matrix:
      - AR_PYTHON_PACKAGE_ROOT_DIR_SUFFIX: ["source"]

Test Rafcon Core Python Wheel:
  stage: Test
  <<: *only-default
  needs: [ "Pip::build pure" ]
  dependencies: [ "Pip::build pure" ]
  image: artifactory.ar.int:5000/ar-ci-ubuntu:22.04
  script:
    - python3 -m pip install -U pip pytest pytest-timeout
    - python3 -m pip install wheels/*.whl
    - python3 -m pytest tests/core

Test Rafcon Core Python Wheel Windows:
  stage: Test
  <<: *only-default
  needs: [ "Pip::build pure" ]
  dependencies: [ "Pip::build pure" ]
  tags:
    - Agile_Windows_Managed
  script:
    - python3 -m pip install -U pip pytest pytest-timeout
    - python3 -m pip install (Get-ChildItem '.\wheels\' -Filter *.whl).fullname
    - python3 -m pytest tests\core
